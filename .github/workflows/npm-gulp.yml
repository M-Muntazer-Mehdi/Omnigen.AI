name: Deploy Next.js App

on:
  push:
    branches:
      - main # Or your main branch name, e.g., 'master'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    strategy:
      matrix:
        # Use Node.js 18.x or 20.x (current LTS) as required by react-hook-form and Next.js
        node-version: [20.x] # Recommended: Use latest LTS for compatibility

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Use the latest checkout action for better security and features

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4 # Use the latest setup-node action
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'       # Caches npm dependencies for faster builds

      - name: Install dependencies
        run: npm install

      # If Gulp is used in your build process, ensure it's installed.
      # It's best practice to have 'gulp' in your package.json devDependencies.
      # If it's not, you might need 'npm install gulp --save-dev' here.
      # Assuming it's in devDependencies, 'npm install' should cover it.

      # If you use Prisma, you need to generate the client during the build
      - name: Generate Prisma Client (if applicable)
        run: npx prisma generate

      - name: Build Next.js application
        run: npm run build

      # If you have a specific Gulp task to run *after* the Next.js build,
      # you can add it here. Otherwise, if Gulp was just part of the build process,
      # it might be integrated into your 'npm run build' script or no longer needed.
      # If 'gulp' is a command in your package.json scripts (e.g., "gulp-task": "gulp"),
      # you would run it like: npm run gulp-task
      # For now, I'm commenting out the direct 'gulp' command as it was failing.
      # - name: Run Gulp tasks (if needed)
      #   run: gulp

      # Add your deployment step here (e.g., Vercel, Netlify, custom server)
      # For example, for Vercel:
      # - name: Deploy to Vercel
      #   run: npx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}
      #   env:
      #     NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      #     CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      #     # Add any other environment variables your Next.js app needs
      #     # DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     # ...